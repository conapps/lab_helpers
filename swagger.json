{
  "info": {
    "title": "Lab Helpers",
    "version": "1.0.0",
    "description": "API que acompaña a Ansible Tower para levantar ambientes de desarrollo durante los workshops de DevOps 101 de Conatel, y otras instancias."
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "host": "ansibletower.conatest.click",
  "basePath": "/helpers/",
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "SecretAuthentication": {
      "type": "apiKey",
      "in": "header",
      "name": "X-Lab-Helpers-Secret"
    },
    "JWTTokenAuthentication": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization"
    }
  },
  "swagger": "2.0",
  "paths": {
    "/api": {
      "get": {
        "summary": "Devuelve información básica de la API",
        "description": "Se puede utilizar este endpoint para comenzar a recorrer la API. Las URL para todas las versiones de la misma, y la URL para la autenticación con la misma pueden encontrarse en esta respuesta.\n",
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "description": "AWX Helper API",
                "current_version": "/api/v1/",
                "available_versions": {
                  "v1": "/api/v1/"
                },
                "auth": "/api/auth/"
              }
            },
            "description": "OK"
          },
          "500": {
            "$ref": "#/responses/ServerError"
          }
        }
      }
    },
    "/api/auth/": {
      "get": {
        "summary": "Devuelve información básica de la API",
        "description": "Se puede utilizar este endpoint para recorrer la API de autenticación. En la respuesta se detallan todos los endpoints disponibles bajo este namespace.\n",
        "tags": [
          "auth"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": {
                "login": "/helpers/api/auth/login/",
                "signup": "/helpers/api/auth/signup/"
              }
            }
          },
          "500": {
            "$ref": "#/responses/ServerError"
          }
        }
      }
    },
    "/api/auth/login/": {
      "post": {
        "summary": "Inicia la sesión de un usuario.",
        "description": "Autenticación al sistema. Si las credenciales son validas, se devuelve el `id` y `access` token con el cual podrán acceder al resto de los recurso, dependiendo del perfil del usuario. El token de `id` contiene la información del usuario. Pueden usarse cualquiera de los dos tokens para interactuar con la API pero se sugiere que se utilice el de `access` dado que es más pequeño. Ambos tokens son validos por 1 hora.\n",
        "parameters": [
          {
            "in": "body",
            "name": "credentials",
            "required": true,
            "description": "Credenciales de usuario. Ambos campos son obligatorios.",
            "schema": {
              "$ref": "#/definitions/Credentials"
            }
          }
        ],
        "tags": [
          "auth"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/Tokens"
            }
          },
          "400": {
            "$ref": "#/responses/Error"
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "500": {
            "$ref": "#/responses/ServerError"
          }
        }
      }
    },
    "/api/auth/signup/": {
      "post": {
        "summary": "Crea un nuevo usuario.",
        "description": "Crea un nuevo usuario. Solamente pueden crear nuevos usuarios aquellos que cuenten con el secreto de la aplicación. El mismo se define al momento de ejecutar la aplicación por el administrador del sistema.\n",
        "parameters": [
          {
            "in": "body",
            "required": true,
            "name": "user",
            "description": "Datos de usuario a crear.",
            "schema": {
              "$ref": "#/definitions/UserBody"
            }
          }
        ],
        "security": [
          {
            "SecretAuthentication": []
          }
        ],
        "tags": [
          "auth"
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "$ref": "#/responses/Error"
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "500": {
            "$ref": "#/responses/ServerError"
          }
        }
      }
    },
    "/api/v1/documents/": {
      "get": {
        "summary": "Devuelve una lista de documentos paginada.",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "type": "number",
            "minimum": 1,
            "maximum": 100,
            "description": "Limite de documentos a devolver."
          },
          {
            "in": "query",
            "name": "offset",
            "type": "number",
            "minimum": 0,
            "description": "Valor de offset según el cual se paginan los resultados."
          },
          {
            "in": "query",
            "name": "sortBy",
            "type": "string",
            "default": "id",
            "description": "Valor de la variable por la cual se ordenan los resultados.\n"
          }
        ],
        "security": [
          {
            "JWTTokenAuthentication": []
          }
        ],
        "tags": [
          "documents"
        ],
        "responses": {
          "200": {
            "description": "La lista de documentos paginada.",
            "schema": {
              "$ref": "#/definitions/Documents"
            }
          },
          "400": {
            "$ref": "#/responses/Error"
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "500": {
            "$ref": "#/responses/ServerError"
          }
        }
      },
      "post": {
        "summary": "Almacena un documento.",
        "description": "El documento a almacenar puede ser cualquier objeto JSON. La aplicación almacenara el documento en la base, y devolverá el ID donde puede recuperarse.\n",
        "parameters": [
          {
            "in": "body",
            "required": true,
            "name": "document",
            "description": "Objeto JSON.",
            "schema": {
              "$ref": "#/definitions/AnyObject"
            }
          }
        ],
        "security": [
          {
            "JWTTokenAuthentication": []
          }
        ],
        "tags": [
          "documents"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          },
          "400": {
            "$ref": "#/responses/Error"
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "500": {
            "$ref": "#/responses/ServerError"
          }
        }
      }
    },
    "/api/v1/documents/{id}": {
      "get": {
        "summary": "Devuelve un documento según su 'id'.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "minimum": 1,
            "description": "ID del documento."
          }
        ],
        "security": [
          {
            "JWTTokenAuthentication": []
          }
        ],
        "tags": [
          "documents"
        ],
        "responses": {
          "200": {
            "description": "El documento buscado.",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          },
          "400": {
            "$ref": "#/responses/Error"
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "500": {
            "$ref": "#/responses/ServerError"
          }
        }
      }
    }
  },
  "definitions": {
    "AnyObject": {
      "description": "Cualquier objeto.",
      "type": "object",
      "example": {
        "something": "awesome"
      }
    },
    "ID": {
      "description": "ID del recurso. Compatible con CUID.",
      "type": "string",
      "pattern": "^c[^\\s-]{8,}$",
      "example": "cjld2cjxh0000qzrmn831i7rn"
    },
    "Count": {
      "description": "Cantidad de elementos devueltos.",
      "type": "number",
      "example": 1
    },
    "URL": {
      "description": "URL correspondiente al recurso.",
      "type": "string",
      "pattern": "^(/[^/ ]*)+/?$",
      "example": "/helpers/api/v1/documents/cjld2cjxh0000qzrmn831i7rn"
    },
    "Email": {
      "description": "Dirección de Email",
      "type": "string",
      "format": "email",
      "example": "example@someplace.com"
    },
    "Password": {
      "description": "Contraseña",
      "type": "string",
      "format": "password",
      "example": "secret"
    },
    "ISODate": {
      "description": "Fecha en formato ISO UTC",
      "type": "string",
      "pattern": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+",
      "example": "2018-10-19T14:06:44.271Z"
    },
    "CreatedDate": {
      "description": "Fecha de creación del recuro",
      "type": "string",
      "pattern": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+",
      "example": "2018-10-19T14:06:44.271Z"
    },
    "UpdatedDate": {
      "description": "Fecha de actualización del recuro",
      "type": "string",
      "pattern": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+",
      "example": "2018-10-20T15:26:44.271Z"
    },
    "Error": {
      "description": "Objeto con mensaje de error.",
      "type": "object",
      "properties": {
        "error": {
          "type": "string",
          "description": "Mensaje de error.",
          "example": "no existe un recurso identificado por la id 'cjld2cjxh0000qzrmn831i7rn'"
        }
      }
    },
    "Credentials": {
      "description": "Objeto con credenciales de acceso.",
      "type": "object",
      "properties": {
        "email": {
          "$ref": "#/definitions/Email"
        },
        "password": {
          "$ref": "#/definitions/Password"
        }
      },
      "required": [
        "email",
        "password"
      ]
    },
    "Tokens": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/User"
        },
        "idToken": {
          "description": "Token JWT que contiene información del usuario. Puede utilizarse para interactuar con la API.\n",
          "type": "string",
          "format": "base64",
          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImV4YW1wbGVAc29tZXBsYWNlLmNvbSIsInVzZXJuYW1lIjoidXNlciIsIm5hbWUiOiJKb2huIERvZSIsInJvbGUiOiJhZG1pbiIsImlhdCI6MTUzOTk2NDc3NX0.dlmEXpv8PCdJuw2XpENLPrhIFqTyUfwvh5ijNAdlKpI"
        },
        "accessToken": {
          "description": "Token JWT. Puede utilizarse para interactuar con la API.\n",
          "type": "string",
          "format": "base64",
          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE1Mzk5NjQ3NzV9.FP2_tkky1VartaGJO9DmO0YXl_K7FeQWSCZKIRK9k04"
        }
      }
    },
    "UserBody": {
      "description": "Usuario.",
      "type": "object",
      "properties": {
        "email": {
          "$ref": "#/definitions/Email"
        },
        "password": {
          "$ref": "#/definitions/Password"
        },
        "username": {
          "description": "Nombre de cuenta del usuario.",
          "type": "string",
          "example": "user"
        },
        "name": {
          "description": "Nombre de usuario.",
          "type": "string",
          "example": "John Doe"
        },
        "role": {
          "description": "Rol para definir el nivel de acceso del usuario.",
          "type": "string",
          "enum": [
            "admin",
            "user"
          ]
        }
      },
      "required": [
        "email",
        "password"
      ]
    },
    "User": {
      "description": "Usuario.",
      "type": "object",
      "properties": {
        "email": {
          "$ref": "#/definitions/Email"
        },
        "username": {
          "description": "Nombre de cuenta del usuario.",
          "type": "string",
          "example": "user"
        },
        "name": {
          "description": "Nombre de usuario.",
          "type": "string",
          "example": "John Doe"
        },
        "role": {
          "description": "Rol para definir el nivel de acceso del usuario.",
          "type": "string",
          "enum": [
            "admin",
            "user"
          ]
        }
      }
    },
    "Next": {
      "description": "URL para obtener la siguiente lista de recursos, paginados utilizando las opciones `offset` y `limit`.",
      "type": "string",
      "pattern": "^(/[^/ ]*)+/?$",
      "example": "/helpers/api/v1/documents/?offset=20&limit=10"
    },
    "Previous": {
      "description": "URL para obtener la anterior lista de recursos, paginados utilizando las opciones `offset` y `limit`.",
      "type": "string",
      "pattern": "^(/[^/ ]*)+/?$",
      "example": "/helpers/api/v1/documents/?offset=10&limit=10"
    },
    "Documents": {
      "type": "object",
      "description": "Lista de documentos.",
      "properties": {
        "count": {
          "$ref": "#/definitions/Count"
        },
        "next": {
          "$ref": "#/definitions/Next"
        },
        "previous": {
          "$ref": "#/definitions/Previous"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Document"
          }
        }
      }
    },
    "Document": {
      "type": "object",
      "description": "Documento JSON almacenado en la base.",
      "properties": {
        "created": {
          "$ref": "#/definitions/CreatedDate"
        },
        "data": {
          "$ref": "#/definitions/AnyObject",
          "description": "Documento a ser almacenado."
        },
        "id": {
          "$ref": "#/definitions/ID"
        },
        "type": {
          "type": "string",
          "enum": [
            "document"
          ],
          "description": "Tipo del recurso.",
          "example": "document"
        },
        "url": {
          "$ref": "#/definitions/URL"
        },
        "updated": {
          "$ref": "#/definitions/UpdatedDate"
        }
      }
    }
  },
  "responses": {
    "Unauthorized": {
      "description": "No cuenta con credenciales suficientes para acceder a este recurso.\n",
      "schema": {
        "type": "string",
        "example": "Unauthorized"
      }
    },
    "NotFound": {
      "description": "El recurso requerido, un documento por ejemplo, no fue encontrado.\n",
      "schema": {
        "type": "string",
        "example": "Not Found"
      }
    },
    "ServerError": {
      "description": "Algo sucedio en el servidor y no puede responder\n",
      "schema": {
        "type": "string",
        "example": "Server Error"
      }
    },
    "Error": {
      "description": "El request es invalido o no puede procesarse. Un mensaje de error con más información seré provisto en el cuerpo del mensaje.\n",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    }
  },
  "parameters": {},
  "tags": []
}