paths:
  /api/v1/participants/:
    get:
      summary: Devuelve una lista paginada de participantes.
      parameters:
        - in: query
          name: limit
          type: number
          minimum: 1
          maximum: 100
          description: Limite de participantes a devolver.
        - in: query
          name: offset
          type: number
          minimum: 0
          description: Valor de offset según el cual se paginan los resultados.
        - in: query
          name: sortBy
          type: string
          default: id
          description: >
            Valor de la variable por la cual se ordenan los resultados.
      security:
        - JWTTokenAuthentication: []
      tags:
        - participants
      responses:
        200:
          description: Lista paginada de participantes.
          schema:
            $ref: '#/definitions/Participants'
        400:
          $ref: '#/responses/Error'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/ServerError'
    post:
      summary: Crea un nuevo participante.
      parameters:
        - in: body
          required: true
          name: document
          description: Objeto JSON.
          schema:
            $ref: '#/definitions/Participant'
      security:
        - JWTTokenAuthentication: []
      tags:
        - participants
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Participants'
        400:
          $ref: '#/responses/Error'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/ServerError'
  /api/v1/participants/{id}/:
    get:
      summary: Devuelve un participante según su 'id'.
      parameters:
        - in: path
          name: id
          required: true
          type: string
          minimum: 1
          maximum: 1
          description: ID del participante.
      security:
        - JWTTokenAuthentication: []
      tags:
        - participants
      responses:
        200:
          description: El participante buscado.
          schema:
            $ref: '#/definitions/Participants'
        400:
          $ref: '#/responses/Error'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/ServerError'
    put:
      summary: Actualiza un participante identificado por su 'id'.
      parameters:
        - in: path
          name: id
          required: true
          type: string
          minimum: 1
          maximum: 1
          description: ID del participante.
        - in: body
          required: true
          name: document
          description: Objeto JSON.
          schema:
            $ref: '#/definitions/Participant'
      security:
        - JWTTokenAuthentication: []
      tags:
        - participants
      responses:
        200:
          description: El participante buscado.
          schema:
            $ref: '#/definitions/Participants'
        400:
          $ref: '#/responses/Error'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/ServerError'
    delete:
      summary: Elimina un participante según su 'id'.
      parameters:
        - in: path
          name: id
          required: true
          type: string
          minimum: 1
          maximum: 1
          description: ID del participante.
      security:
        - JWTTokenAuthentication: []
      tags:
        - participants
      responses:
        204:
          $ref: '#/responses/NoContent'
        400:
          $ref: '#/responses/Error'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/ServerError'